plugins {
  id 'java'
  id 'idea'
  id 'maven'
  id 'com.github.johnrengelman.shadow' // version '4.0.2'
}

group = 'oliv.ai'
version = '1.0'

repositories {
  mavenCentral()
  mavenLocal()
  maven { url "https://oss.sonatype.org/content/groups/public" }
}

dependencies {
//  compile 'com.pi4j:pi4j-core:1.1'
//  compile 'comm:rxtx:1.0'
  compile 'org.tensorflow:tensorflow:1.14.0'
//  compile 'org.tensorflow:tensorflow:1.13.1'
//  compile 'org.tensorflow:tensorflow:1.8.0'
  compile 'org.deeplearning4j:deeplearning4j-modelimport:1.0.0-beta4'
  compile 'org.nd4j:nd4j-native-platform:1.0.0-beta4'
  //
  compile 'org.slf4j:slf4j-api:1.7.5'
  compile 'org.slf4j:slf4j-log4j12:1.7.5'
  // For the TF jar using JNI
  compile fileTree(dir: 'libs', include: ['*.jar'])
}

shadowJar {
  zip64 true
}

task listJars {
  doLast {
    configurations.compile.each {
      File file -> println "${file} => ${file.name}"
    }
  }
}

tasks.withType(JavaExec) {
  systemProperty "java.library.path", "../libs/libtensorflow_jni-cpu-darwin-x86_64-1.14.0" // For Mac
  if (System.getProperty('DEBUG', 'false') == 'true') {
    jvmArgs '-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=9099'
  }
}

// TODO Start Web Server for WebComponents & Co

task runHelloTFSample(type: JavaExec, dependsOn: classes, description: 'Runs HelloTF sample') {
  main = 'tf.samples.HelloTF'
  classpath sourceSets.main.runtimeClasspath
  classpath configurations.runtime
}

task runTFTrain(type: JavaExec, dependsOn: classes, description: 'Runs TF Training, run with args [model/graph.pb checkpoint]') {
  main = 'tf.samples.Train'
  args = ['model/graph.pb', 'checkpoint']
  classpath sourceSets.main.runtimeClasspath
  classpath configurations.runtime
}

task runTFPredictor(type: JavaExec, dependsOn: classes, description: 'Runs TF Predictor') {
  main = 'tf.samples.Predictor'
  classpath sourceSets.main.runtimeClasspath
  classpath configurations.runtime
}

task runTFUseModel(type: JavaExec, dependsOn: classes, description: 'Uses trained TF model') {
  main = 'tf.samples.UseTrainedModel'
  classpath sourceSets.main.runtimeClasspath
  classpath configurations.runtime
}

